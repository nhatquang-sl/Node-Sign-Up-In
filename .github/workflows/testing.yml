name: Unit tests

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  push:
    branches:
      - 'crypto-trade'

jobs:
  backend:
    runs-on: ubuntu-latest 
    #https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    defaults:
      run:
        working-directory: ./back-end

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Clone Submodule #https://rgoswami.me/posts/priv-gh-actions/
        env:
          SSHK: ${{ secrets.SUB_CREDENTIALS }}
        run: |
          mkdir -p $HOME/.ssh
          echo "$SSHK" > $HOME/.ssh/ssh.key
          chmod 600 $HOME/.ssh/ssh.key
          export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/ssh.key"
          git submodule update --init --recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: cd ../front-end && npm i && cd ../back-end && npm i
      - name: Run test
        run: npm test
  frontend:
    runs-on: ubuntu-latest 
    #https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    defaults:
      run:
        working-directory: ./front-end

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm i
      - name: Run test
        run: npm test
  build-push-image:
    # https://arctype.com/blog/github-vercel/
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Clone Submodule #https://rgoswami.me/posts/priv-gh-actions/
        env:
          SSHK: ${{ secrets.SUB_CREDENTIALS }}
        run: |
          mkdir -p $HOME/.ssh
          echo "$SSHK" > $HOME/.ssh/ssh.key
          chmod 600 $HOME/.ssh/ssh.key
          export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/ssh.key"
          git submodule update --init --recursive
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-sign-up-in:latest


  # deploy-frontend-vercel:
  #   # https://arctype.com/blog/github-vercel/
  #   runs-on: ubuntu-latest
  #   needs: [backend, frontend]
  #   defaults:
  #     run:
  #       working-directory: ./front-end
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v3
  #     - name: Clone Submodule #https://rgoswami.me/posts/priv-gh-actions/
  #       env:
  #         SSHK: ${{ secrets.SUB_CREDENTIALS }}
  #       run: |
  #         mkdir -p $HOME/.ssh
  #         echo "$SSHK" > $HOME/.ssh/ssh.key
  #         chmod 600 $HOME/.ssh/ssh.key
  #         export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/ssh.key"
  #         git submodule update --init --recursive
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: Install dependencies and Deploy
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  #         CI: false
  #       run: |
  #         npm i && npm run build
  #         npx vercel deploy --prod --token ${VERCEL_TOKEN} --confirm
